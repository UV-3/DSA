Complexity is O(n*n)
----------------------------------------------------------------------------------------------------------
const int N=2e5+5;

vector<pair<int,int>>adj[N];

int key[N],parent[N];
bool mstSet[N];

void prim(int n){
    for(int i=0;i<n;i++){
        key[i]=INT_MAX;
        mstSet[i]=false;
    }
    key[0]=0;
    parent[0]=-1;
    for(int cnt=0;cnt<n-1;cnt++){ // processing for n-1 edges
        int mini=INT_MAX,u=-1;
        for(int v=0;v<n;v++){
            if(mstSet[v]==false && key[v]<mini){  // find the smallest index which is not included in MST
                mini=key[v];
                u=v;
            }
        }
        mstSet[u]=true; // include this in the MST
        for(auto it:adj[u]){
            int v= it.first;
            int weight= it.second;
            if(mstSet[v]==false && weight<key[v]){
                parent[v]=u;
                key[v]=weight;
            }
        }
    }
}
--------------------------------------------------------------------------------------------------------------
////////   int n,m; // n is number of nodes
////////   cin>>n>>m;
////////   for(int i=0;i<m;i++){
////////       int a,b,wt;
////////       cin>>a>>b>>wt;
////////       adj[a].push_back({b,wt});
////////       adj[b].push_back({a,wt});
////////   }
////////   prim(n);
