int Solution::minDepth(TreeNode* root) {
    if(root==NULL){
        return 0;
    }
    if(root->left==NULL && root->right==NULL){
        return 1;
    }
    if(root->left==NULL){
        return 1+minDepth(root->right);
    }
    if(root->right==NULL){
        return 1+minDepth(root->left);
    }
    return 1+min(minDepth(root->left),minDepth(root->right));
}
//                                         1                      
//                                    2          3                              
//                                4           4
//                                               5               
//  answer is 3 but it will give 2
