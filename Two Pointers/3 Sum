class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        int n=nums.size();
        sort(nums.begin(),nums.end());
        // sample -2 -2 -1 -1 -1 0 0 0 2 2 2 
        for(int i=0;i<n-2;i++){  // till 3rd last element
            if( i==0 || (i>0 && nums[i]!=nums[i-1]) ){ // to prevent duplicate pairs
                int lo=i+1;
                int hi=n-1;
                while(lo<hi){  //condition for two pointer
                    if(nums[i]+nums[lo]+nums[hi]==0){
                        vector<int>temp;
                        temp.push_back(nums[i]);
                        temp.push_back(nums[lo]);
                        temp.push_back(nums[hi]);
                        ans.push_back(temp);
                        while(lo<hi && nums[lo]==nums[lo+1]){  // one more condition to remove dup
                            lo++;
                        }
                        while(lo<hi && nums[hi]==nums[hi-1]){ // one more condition to remove dup
                            hi--;
                        }
                        
                        // MOST IMPORTANT STEP
                        lo++;hi--;
                    }
                    else if( nums[i]+nums[lo]+nums[hi]<0){
                        lo++;
                    }
                    else{
                        hi--;
                    }
                }
            }
        }
        return ans;
    }
};
