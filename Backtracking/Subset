void calc(vector<int> &A,vector<vector<int>> &ans,vector<int> res,int index)
{
    ans.push_back(res);
    for(int i=index;i<A.size();i++)
    {
        res.push_back(A[i]);
        calc(A,ans,res,i+1);
        res.pop_back();
    }
    return;
}
vector<vector<int> > Solution::subsets(vector<int> &A) {
    vector<vector<int>> ans;
    sort(A.begin(),A.end());
    int index=0;
    vector<int> res;
    calc(A,ans,res,index);
    return ans;
    
}
// iterative solution
class Solution {
public:

    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>>subs={{}};
        for(int num:nums){
            int n=subs.size();
            for(int i=0;i<n;i++){
                subs.push_back(subs[i]);
                subs.back().push_back(num);
            }
        }
        return subs;
    }
};
