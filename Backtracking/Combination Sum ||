void calc(vector<int>&ds, vector<vector<int>>&ans,vector<int>&A,int ind, int target){
    if(target==0){
        ans.push_back(ds);
        return;
    }
    for(int i=ind;i<A.size();i++){
        if(i!=ind && A[i]==A[i-1]){
            continue;
        }
        if(A[i]> target){
            break;
        }
        ds.push_back(A[i]);
        calc(ds,ans,A,i+1,target-A[i]);
        ds.pop_back();
    }
}
vector<vector<int> > Solution::combinationSum(vector<int> &A, int target) {
    sort(A.begin(),A.end());
    vector<vector<int>>ans;
    vector<int>ds;
    calc(ds,ans,A,0,target);
    return ans;
}
