void calc(vector<vector<int>>&ans,int ind,vector<int>&A){
    if(ind==A.size()){
        ans.push_back(A);
        return;
    }
    for(int i=ind;i<A.size();i++){
        swap(A[i],A[ind]);
        calc(ans,ind+1,A);
        swap(A[i],A[ind]); // backtrack
    }
}
vector<vector<int> > Solution::permute(vector<int> &A) {
    sort(A.begin(),A.end());
    vector<vector<int>>ans;
    calc(ans,0,A);
    return ans;
}
// best method. O(n*n!) and space complexity O(1)
