int ss(string s1,string s2){
    if(s1.size()!=s2.size()){
        return 0;
    }
    int n=s1.size();
    if(n==0){
        return 1;
    }
    if(s1==s2){
        return 1;
    }
    string c1=s1;
    string c2=s2;
    sort(c1.begin(),c1.end());
    sort(c2.begin(),c2.end());
    if(c1!=c2){
        return 0;
    }
    for(int i=1;i<n;i++){
        if (ss(s1.substr(0, i), s2.substr(0, i))
            && ss(s1.substr(i, n - i),
                          s2.substr(i, n - i))) {
            return true;
        }
        if (ss(s1.substr(0, i),
                       s2.substr(n - i, i))
            && ss(s1.substr(i, n - i),
                          s2.substr(0, n - i))) {
            return true;
        }
    }
    return false;
    
}
int Solution::isScramble(const string s1, const string s2) {
    return ss(s1,s2);
}
