class Solution {
public:
    int dp[30005][2];
    int helper(int i, int own, vector<int>&prices){
        if(i==prices.size()){
            return 0;
        }
        if(dp[i][own]!=-1){
            return dp[i][own];
        }
        if(own){
            int op1= prices[i]+helper(i+1,0,prices);
            int op2= helper(i+1,1,prices);
            return dp[i][own]= max(op1,op2);
        }
        else{
            int op1= -prices[i]+helper(i+1,1,prices);
            int op2= helper(i+1,0,prices);
            return dp[i][own]= max(op1,op2);
        }
    }
    int maxProfit(vector<int>& prices) {
        memset(dp,-1,sizeof(dp));
        return helper(0,0,prices);
    }
};
