vector<vector<int>> dp(5000, vector<int>(5000, -1));
const int mod = 1e9 + 7;
int helper2(int n, int sum)
{
    if (n == 0)
    {
        return sum == 0;
    }

    if (dp[n][sum] != -1)
    {
        return dp[n][sum];
    }
    int ans = 0;
    for (int i = 0; i < 10; i++)
    {
        if (sum - i >= 0)
        {
            ans += helper2(n - 1, sum - i);
            ans %= mod;
        }
    }
    return dp[n][sum] = ans;
}
int helper(int n, int sum)
{
    int ans = 0;
    for (int i = 1; i <= 9; i++)
    {
        if (sum - i >= 0)
        {
            ans += helper2(n - 1, sum - i);
            ans %= mod;
        }
    }
    return ans;
}
int Solution::solve(int A, int B)
{
    int n = A, sum = B;
    int fnl = helper(n, sum);
    return fnl;
}
