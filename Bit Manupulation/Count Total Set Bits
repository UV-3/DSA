int calc(int n){
    int x=0;
    while((1<<x)<=n){
        x++;
    }
    return x-1;
    // this function returns largest power of  2 less than or equal to n
}
int Solution::solve(int n) {
    if(n==0){
        return 0;
    }
    long long  x= calc(n);
    long long  bits= x*(1<<(x-1)) ; // number of total set bits for (0 to pow(2,x)-1))
    long long  msb= (n-(1<<x)+1); // maximum set bit
    long long  left= n-(1<<x);
    long long  ans= bits+msb+ solve(left);
    int fnl= ans%(1000000007);
    return fnl;
}
// try to analyse for 11 you will understand the whole concept
