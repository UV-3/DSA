ListNode *reverseLL(ListNode * head){
    ListNode *dummy= NULL;
    while(head!=NULL){
        ListNode* next = head->next;
        head->next=dummy;
        dummy=head;
        head=next;
    }
    return dummy;
}
int Solution::lPalin(ListNode* head) {
    if(head==NULL || head->next==NULL){
        return 1;
    }
    ListNode *slow=head;
    ListNode *fast=head;
    while(fast->next!=NULL && fast->next->next!=NULL){
        fast= fast->next->next;
        slow= slow->next;
    }
    slow->next= reverseLL(slow->next);
    slow=slow->next;
    while(slow!=NULL){
        if(head->val!= slow->val){
            return 0;
        }
        slow=slow->next;
        head=head->next;
    }
    return 1;
}
